
#quarkus.application.name=gitops-argocd
quarkus.container-image.build=true
quarkus.container-image.push=true

quarkus.container-image.group=shani1
quarkus.container-image.registry=quay.io
#quarkus.container-image.username=quay-username
#quarkus.container-image.password=quay-password
quarkus.container-image.name=${quarkus.application.name:gitops-argocd}
quarkus.container-image.tag=${quarkus.application.version:latest}
quarkus.container-image.additional-tags=${quarkus.application.version},prod

#The name of the container image extension to use (e.g. docker, jib, s2i, openshift). 
#The option will be used in case multiple extensions are present.
quarkus.container-image.builder=jib
quarkus.openshift.route.expose=true
quarkus.openshift.deploy=false
quarkus.openshift.deployment-kind=deployment
quarkus.openshift.service-account=${quarkus.application.name}
#quarkus.openshift.labels.app=${quarkus.application.name}
#quarkus.openshift.labels.version=${quarkus.application.version}
#quarkus.openshift.name=${quarkus.application.name}-${quarkus.application.version}
#quarkus.openshift.version=${quarkus.application.version}
#quarkus.openshift.add-name-to-label-selectors=false
#quarkus.openshift.add-version-to-label-selectors=false

quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.database.generation=drop-and-create

quarkus.datasource.url=${POSTGRES_URL}
quarkus.datasource.username=${POSTGRES_USERNAME}
quarkus.datasource.password=${POSTGRES_PASSWORD}

quarkus.helm.values."envs.POSTGRES_URL".value=jdbc:postgresql://localhost:1111/my_database
quarkus.helm.values."envs.POSTGRES_USERNAME".value=user
quarkus.helm.values."envs.POSTGRES_PASSWORD".value=supersecret

#quarkus.openshift.env.vars.POSTGRES_URL=jdbc.postgresql://host:1111/database
#quarkus.openshift.env.vars.POSTGRES_USERNAME=postgres
#quarkus.openshift.env.vars.POSTGRES_PASSWORD=postgres

#quarkus.openshift.env-vars.POSTGRES_URL.name=POSTGRES_URL
#quarkus.openshift.env-vars.POSTGRES_USERNAME.name=POSTGRES_USERNAME
#quarkus.openshift.env-vars.POSTGRES_PASSWORD.name=POSTGRES_PASSWORD
#quarkus.openshift.env-vars.POSTGRES_URL.value=jdbc.postgresql://host:1111/database
#quarkus.openshift.env-vars.POSTGRES_USERNAME.value=postgres
#quarkus.openshift.env-vars.POSTGRES_PASSWORD.value=postgres

#quarkus.openshift.env-vars.CPU_LIMIT.name=CPU_LIMIT
#quarkus.openshift.env-vars.CPU_LIMIT.value=0.5
#quarkus.openshift.env-vars.MEMORY_LIMIT.name=MEMORY_LIMIT
#quarkus.openshift.env-vars.MEMORY_LIMIT.value=256Mi
#quarkus.openshift.env-vars.CPU_REQUEST.name=CPU_REQUEST
#quarkus.openshift.env-vars.CPU_REQUEST.value=0.01
#quarkus.openshift.env-vards.MEMORY_REQUEST.name=MEMORY_REQUEST
#quarkus.openshift.env-vars.MEMORY_REQUEST.value=128Mi

#quarkus.helm.values."app.resources.limits.CPU".value=0.5

quarkus.openshift.resources.limits.cpu=0.5
quarkus.openshift.resources.limits.memory=256Mi
quarkus.openshift.resources.requests.cpu=0.01
quarkus.openshift.resources.requests.memory=128Mi

quarkus.helm.output-directory=../helm
quarkus.helm.create-readme-file=false
quarkus.helm.enabled=true

quarkus.helm.dependencies.postgressql.repository=https://charts.bitnami.com/bitnami
quarkus.helm.dependencies.postgressql.version=14
#quarkus.helm.dependencies.postgressql.alias=db
#quarkus.helm.dependencies.postgresql.wait-for-service=demo-db:5432
#quarkus.helm.values."postgresql.auth.database".value=demo_database
#quarkus.helm.values."postgresql.auth.username".value=user
#quarkus.helm.values."postgresql.auth.password".value=supersecret
#quarkus.helm.values."postgresql.volumePermissions.enabled".value-as-bool=false
#quarkus.helm.values."postgresql.volumePermissions.securityContext.runAsUser".value=auto
#quarkus.helm.values."postgresql.securityContext.enabled".value-as-bool=false
#quarkus.helm.values."postgresql.shmVolume.chmod.enabled".value-as-bool=false
#quarkus.helm.values."postgresql.primary.containerSecurityContext.enabled".value-as-bool=false
#quarkus.helm.values."postgresql.primary.containerSecurityContext.runAsUser".value=auto
#quarkus.helm.values."postgresql.primary.podSecurityContext.enabled".value-as-bool=false
#quarkus.helm.values."postgresql.primary.podSecurityContext.fsGroup".value=auto

#quarkus.helm.values[0].property=resources 
#quarkus.helm.values[0].paths=spec.template.spec.containers[0].resources.limits.memory 
#quarkus.helm.values."metadata".property=metadata
#quarkus.helm.values."metadata".paths=metadata.name

quarkus.openshift.replicas=2